{"version":3,"sources":["components/App/App.module.css","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageErrorView/ImageErrorView.module.css","components/Modal/Modal.module.css","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/SearchForm/SearchForm.js","components/Searchbar/Searchbar.js","services/image-api.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","images/error-image.jpg","components/ImageErrorView/ImageErrorView.js","components/Button/Button.js","components/Modal/Modal.js","components/App/App.js","index.js","components/Searchbar/SearchForm/SearchForm.module.css"],"names":["module","exports","SearchForm","onSubmit","value","onChange","className","s","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","Searchbar","useState","imageName","setImageName","e","preventDefault","trim","toast","error","currentTarget","toLowerCase","apiOptions","fetchImage","name","page","a","fetch","response","json","images","propTypes","PropTypes","string","isRequired","number","ImageGalleryItem","smallImage","bigImage","alt","openModal","ImageGalleryItemImage","onClick","src","ImageGallery","map","el","webformatURL","largeImageURL","tags","id","ImageErrorView","message","role","errorImage","width","height","Button","loadMoreImages","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","target","Status","dataModal","url","App","setImages","setPage","setError","showModal","setShowModal","status","setStatus","loaderImages","then","comeImages","total","prevImages","hits","scrollTo","top","documentElement","scrollHeight","behavior","Promise","reject","Error","catch","toggleModal","urlImage","Loader","color","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f2a509d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3_n_M\",\"Loader\":\"App_Loader__3K4Uf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2Uy6h\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1XNc0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorImage\":\"ImageErrorView_errorImage__3vGxr\",\"message\":\"ImageErrorView_message__V0FPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3_oiG\",\"Modal\":\"Modal_Modal__3dGmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3MpGu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__Cvm52\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__UY94o\"};","import PropTypes from 'prop-types';\nimport s from './SearchForm.module.css';\n\nexport default function SearchForm({ onSubmit, value, onChange }) {\n  return (\n    <form className={s.SearchForm} onSubmit={onSubmit}>\n      <button type=\"submit\" className={s.SearchFormButton}>\n        <span className={s.SearchFormButtonLabel}>Search</span>\n      </button>\n\n      <input\n        className={s.SearchFormInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        value={value}\n        placeholder=\"Search images and photos\"\n        onChange={onChange}\n      />\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\nimport SearchForm from './SearchForm';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [imageName, setImageName] = useState('');\n\n  const handleNameChange = e => {\n    setImageName(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (imageName.trim() === '') {\n      toast.error('Please enter the name of the picture');\n      return;\n    }\n\n    onSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <header className={s.Searchbar}>\n      <SearchForm\n        onSubmit={handleSubmit}\n        value={imageName}\n        onChange={handleNameChange}\n      />\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nconst apiOptions = {\n  API_KEY: '22144472-c4d53a495baf7d3490978ff95',\n  BASE_URL: 'https://pixabay.com/api/',\n  PER_PAGE: 12,\n};\n\nasync function fetchImage(name, page) {\n  const response = await fetch(\n    `${apiOptions.BASE_URL}?q=${name}&page=${page}&key=${apiOptions.API_KEY}&image_type=photo&orientation=horizontal&per_page=${apiOptions.PER_PAGE}`,\n  );\n  const images = await response.json();\n  return images;\n}\n\nfetchImage.propTypes = {\n  name: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport { fetchImage, apiOptions };\n","import s from './ImageGalleryItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({\n  smallImage,\n  bigImage,\n  alt,\n  openModal,\n}) {\n  const onOpenModalClick = () => {\n    openModal(bigImage, alt);\n  };\n\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        className={s.ImageGalleryItemImage}\n        onClick={onOpenModalClick}\n        src={smallImage}\n        alt={alt}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  smallImage: PropTypes.string.isRequired,\n  bigImage: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  openModal: PropTypes.func,\n};\n","import s from './ImageGallery.module.css';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGallery({ images, openModal }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(el => (\n        <ImageGalleryItem\n          key={el.id}\n          smallImage={el.webformatURL}\n          openModal={openModal}\n          bigImage={el.largeImageURL}\n          alt={el.tags}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape),\n  openModal: PropTypes.func,\n};\n","export default __webpack_public_path__ + \"static/media/error-image.66517862.jpg\";","import errorImage from '../../images/error-image.jpg';\nimport s from './ImageErrorView.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ImageErrorView({ message }) {\n  return (\n    <div role=\"alert\" className={s.errorImage}>\n      <img src={errorImage} width=\"240\" height=\"240\" alt=\"errorImage\" />\n      <p className={s.message}>{message}</p>\n    </div>\n  );\n}\n\nImageErrorView.propTypes = {\n  message: PropTypes.string,\n};\n","import s from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Button({ loadMoreImages }) {\n  return (\n    <button className={s.Button} type=\"button\" onClick={loadMoreImages}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  loadMoreImages: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ bigImage, alt, onClose }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Overlay} onClick={handleBackdropClick}>\n      <div className={s.Modal}>\n        <img src={bigImage} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nModal.propTypes = {\n  bigImage: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import { Fragment, useState, useEffect } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './App.module.css';\nimport Searchbar from '../Searchbar';\nimport { fetchImage, apiOptions } from '../../services/image-api';\nimport ImageGallery from '../ImageGallery';\nimport ImageErrorView from '../ImageErrorView';\nimport Button from '../Button';\nimport Modal from '../Modal';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst dataModal = {\n  url: '',\n  alt: '',\n};\n\nconst App = () => {\n  const [imageName, setImageName] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  useEffect(() => {\n    if (imageName === '') {\n      return;\n    }\n    setPage(1);\n    setImages([]);\n    setStatus(Status.PENDING);\n\n    loaderImages(imageName);\n  }, [imageName]);\n\n  const loaderImages = (name, page = 1) => {\n    setStatus(Status.PENDING);\n\n    fetchImage(name, page)\n      .then(comeImages => {\n        if (comeImages.total !== 0) {\n          setImages(prevImages => [...prevImages, ...comeImages.hits]);\n          setPage(page + 1);\n          setStatus(Status.RESOLVED);\n\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n          return;\n        }\n\n        return Promise.reject(new Error(`No such image: ${name}`));\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  };\n\n  const handleFormSubmit = imageName => {\n    setImageName(imageName);\n  };\n\n  const toggleModal = (urlImage, alt) => {\n    setShowModal(showModal => !showModal);\n    dataModal.url = urlImage;\n    dataModal.alt = alt;\n  };\n\n  return (\n    <div className={s.App}>\n      <Searchbar onSubmit={handleFormSubmit} />\n\n      {status === Status.PENDING && (\n        <Fragment>\n          {images && <ImageGallery images={images} openModal={toggleModal} />}\n          <Loader\n            className={s.Loader}\n            type=\"ThreeDots\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n          />\n        </Fragment>\n      )}\n\n      {status === Status.RESOLVED && (\n        <Fragment>\n          <ImageGallery images={images} openModal={toggleModal} />\n          {images.length >= apiOptions.PER_PAGE && (\n            <Button loadMoreImages={() => loaderImages(imageName, page)} />\n          )}\n        </Fragment>\n      )}\n\n      {status === Status.REJECTED && <ImageErrorView message={error.message} />}\n\n      {showModal && (\n        <Modal\n          bigImage={dataModal.url}\n          alt={dataModal.alt}\n          onClose={toggleModal}\n        />\n      )}\n\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"SearchForm_SearchForm__Y7t9Q\",\"SearchFormButton\":\"SearchForm_SearchFormButton__3sM4A\",\"SearchFormButtonLabel\":\"SearchForm_SearchFormButtonLabel__3L4Rv\",\"SearchFormInput\":\"SearchForm_SearchFormInput___dSo2\"};"],"sourceRoot":""}